import {build} from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import sveltePlugin from "esbuild-svelte";
import { sveltePreprocess } from "svelte-preprocess";
import { copy } from "esbuild-plugin-copy";
import path from "path";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

build({
	banner: {
		js: banner,
	},
	entryPoints: ["./src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/closebrackets",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/comment",
		"@codemirror/fold",
		"@codemirror/gutter",
		"@codemirror/highlight",
		"@codemirror/history",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/matchbrackets",
		"@codemirror/panel",
		"@codemirror/rangeset",
		"@codemirror/rectangular-selection",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/stream-parser",
		"@codemirror/text",
		"@codemirror/tooltip",
		"@codemirror/view",
		...builtins,
	],
	plugins: [
		sveltePlugin({
			preprocess: sveltePreprocess(),
		}),
		copy({
			assets: {
				from: ["./assets/styles.css", "manifest.json"],
				to: ["./"],
			},
		}),
		// {
		// 	name: 'resolve-minisearch',
		// 	setup(build) {
		// 	build.onResolve({ filter: /^minisearch$/ }, () => {
		// 		return { path: path.resolve('node_modules/minisearch/src/MiniSearch.ts') };
		// 	});
		// 	},
		// },
	],
	format: "cjs",
	target: "chrome98",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: path.join("./dist", "main.js"),
	minify: prod,
	watch: !prod
}).catch(() => process.exit(1));

